{"version":3,"sources":["styles/media.js","containers/Body.js","components/Button.js","components/Card.js","demo/Renoti.js","demo/Recalendar.js","projects.js","containers/CardList.js","containers/Header.js","constants/style.js","hooks/event.js","App.js","serviceWorker.js","index.js"],"names":["sizes","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","_templateObject","apply","arguments","Container","styled","div","Body_templateObject","HEADER_HEIGHT","_templateObject2","Header","h1","_templateObject3","props","theme","primary","SubHeader","_templateObject4","Main","_templateObject5","Body","_ref","children","header","subHeader","react_default","a","createElement","Body_Header","Button","button","Button_templateObject","width","white","secondary","Card_templateObject","Card_templateObject2","Card_templateObject3","height","Inner","Card_templateObject4","background","Title","Card_templateObject5","_templateObject6","gray","Description","p","_templateObject7","Demo","_templateObject8","DemoTitle","_templateObject9","Footer","_templateObject10","LinkContainer","_templateObject11","LinkTitle","_templateObject12","Link","_templateObject13","Card","title","description","body","demo","github","website","objectWithoutProperties","Card_Container","Card_Body","href","notifier","createNotifier","positions","types","getRandom","min","max","Math","floor","random","Renoti","Fragment","components_Button","onClick","notify","message","position","length","type","dist","Recalendar","_useState","useState","Date","_useState2","slicedToArray","selected","onSelectDate","recalendar_dist","styles","container","wordBreak","projects","demo_Renoti","demo_Recalendar","CardList_templateObject","CardList","_useMemo","useMemo","withDemo","withoutDemo","forEach","project","push","_useMemo2","main","sub","CardList_Container","map","components_Card","assign","key","Header_templateObject","fullHeader","Left","Header_templateObject2","Logo","Header_templateObject3","Right","Header_templateObject4","Header_templateObject5","name","listener","setFullHeader","useEffect","window","pageYOffset","addEventListener","removeEventListener","Header_Container","Header_Title","App","styled_components_browser_esm","containers_Header","containers_Body","containers_CardList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.356735b1.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nconst sizes = {\n  desktop: 1500,\n  tablet: 900,\n  phone: 576\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { HEADER_HEIGHT } from \"../constants/style\";\nimport media from \"../styles/media\";\n\nconst Container = styled.div`\n  margin: auto;\n  padding: ${HEADER_HEIGHT + 20}px 0;\n  width: 60%;\n  ${media.tablet`width: 90%;`}\n  word-break: keep-all;\n`;\nconst Header = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 48px;\n  text-align: center;\n  line-height: 1.8;\n\n  min-height: 150px;\n  margin: 100px 0;\n  background-color: ${props => props.theme.primary};\n  border-radius: 10px;\n`;\nconst SubHeader = styled.h1`\n  font-size: 28px;\n  margin: 2rem 0;\n  text-align: center;\n`;\nconst Main = styled.div`\n  width: 100%;\n`;\nconst Body = ({ children, header, subHeader }) => (\n  <Container>\n    {header && <Header>{header}</Header>}\n    {subHeader && <SubHeader>{subHeader}</SubHeader>}\n    <Main>{children}</Main>\n  </Container>\n);\nexport default Body;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: ${props => props.width || \"150px\"};\n\n  cursor: pointer;\n  color: ${props => props.theme.white};\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  border: none;\n  border-radius: 5px;\n  background-color: ${props =>\n    props.secondary ? props.theme.secondary : props.theme.primary};\n  box-sizing: border-box;\n  padding: 20px 10px;\n\n  opacity: 1;\n  transition: opacity 0.1s;\n  &:hover {\n    opacity: 0.7;\n    transition: opacity 0.1s;\n  }\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport media from \"../styles/media\";\n\nconst alignCenter = `\n  display: flex;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  display: inline-block;\n  flex-grow: 1;\n\n  width: ${props => props.width || \"33%\"};\n  ${media.desktop`width: ${props => props.width || \"50%\"};`}\n  ${media.tablet`width: ${props => props.width || \"100%\"};`}\n  min-height: ${props => props.height || \"400px\"};\n\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n\n  box-sizing: border-box;\n\n  word-break: keep-all;\n`;\nconst Inner = styled.div`\n  box-sizing: border-box;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  padding: 2rem;\n\n  background-color: ${props => props.theme.white};\n  color: ${props => props.theme.background};\n`;\nconst Title = styled.h1`\n  font-size: 22px;\n  margin: 0;\n  min-height: 50px;\n  ${alignCenter}\n`;\nconst Body = styled.div`\n  border-top: 1px solid ${props => props.theme.gray};\n  border-bottom: 1px solid ${props => props.theme.gray};\n\n  box-sizing: border-box;\n  padding: 5px 0px;\n  width: 100%;\n  min-height: 300px;\n\n  word-break: break-word;\n`;\nconst Description = styled.p`\n  white-space: pre-line;\n`;\nconst Demo = styled.div`\n  width: 100%;\n  padding: 1rem 0;\n`;\nconst DemoTitle = styled.h1`\n  font-size: 18px;\n  border-bottom: 1px solid ${props => props.theme.gray};\n  margin-bottom: 1rem;\n  color: ${props => props.theme.secondary};\n`;\nconst Footer = styled.div`\n  width: 100%;\n  min-height: 50px;\n  word-break: break-all;\n`;\nconst LinkContainer = styled.div`\n  width: 100%;\n  margin: 10px 0;\n`;\nconst LinkTitle = styled.h1`\n  margin-top: 1rem;\n  font-size: 18px;\n`;\nconst Link = styled.a``;\nconst Card = ({\n  title,\n  body,\n  description,\n  demo,\n  github,\n  website,\n  ...props\n}) => {\n  return (\n    <Container {...props}>\n      <Inner>\n        <Title>{title}</Title>\n        <Body>\n          <Description>{description}</Description>\n          {demo && (\n            <Demo>\n              <DemoTitle>Simple Demo</DemoTitle>\n              {demo}\n            </Demo>\n          )}\n        </Body>\n        <Footer>\n          <LinkTitle>링크</LinkTitle>\n          {website && (\n            <LinkContainer>\n              Website: <Link href={website}>{website}</Link>\n            </LinkContainer>\n          )}\n          {github && (\n            <LinkContainer>\n              Github: <Link href={github}>{github}</Link>\n            </LinkContainer>\n          )}\n        </Footer>\n      </Inner>\n    </Container>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { createNotifier, NotiPortal } from \"renoti\";\nimport { Button } from \"../components\";\n\nconst notifier = createNotifier();\n\nconst positions = [\"bottom-left\", \"bottom-center\", \"bottom-right\"];\nconst types = [\"default\", \"success\", \"error\", \"info\"];\n\nconst getRandom = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\nconst getRandomPos = () => positions[getRandom(0, positions.length - 1)];\nconst getRandomType = () => types[getRandom(0, types.length - 1)];\nconst Renoti = () => {\n  const notify = () => {\n    notifier.notify({\n      message: \"Random Noti Demo!\",\n      position: getRandomPos(),\n      type: getRandomType()\n    });\n  };\n  return (\n    <>\n      <Button onClick={notify}>Click Me!</Button>\n      <NotiPortal notifier={notifier} />\n    </>\n  );\n};\n\nexport default Renoti;\n","import React, { useState } from \"react\";\nimport { RcPicker } from \"recalendar\";\n\nconst Recalendar = () => {\n  const [selected, onSelectDate] = useState(new Date());\n\n  return (\n    <>\n      <RcPicker\n        selected={selected}\n        onSelectDate={onSelectDate}\n        styles={{ container: { wordBreak: \"normal\" } }}\n      />\n    </>\n  );\n};\n\nexport default Recalendar;\n","import React from \"react\";\nimport Renoti from \"./demo/Renoti\";\nimport Recalendar from \"./demo/Recalendar\";\n\nconst projects = [\n  {\n    title: \"Devlog\",\n    description: `\n    개발자들끼리 코드와 함께 팁을 공유하는 사이트입니다.\\n\n    개발자끼리 대화를 나눌 수 있는 트위터 같은 소셜 플랫폼을 목표로 만들었으며, 코드를 이용해 팁이나 그 코드로 배운 지식을 공유하는 것이 목표였습니다.\\n\n    `,\n    github: \"https://github.com/Godsenal/devlog\"\n  },\n  {\n    title: \"classChat\",\n    description: `\n    학교 내 같은 수업을 듣는 학생끼리 대화할 수 있는 채팅 웹 어플리케이션입니다.\\n\n    같은 과끼리 대화할 수 있는 플랫폼은 많은데, 같은 수업을 듣는 학생끼리 대화할 수 있는 플랫폼은 적다고 생각하여 개발하였습니다.\\n\n    이중전공을 하며 동기 없이 수업을 듣는 저의 마음이 반영 되기도 하였고, 첫 프로젝트여서 완성도는 미숙하지만 기억에 많이 남는 프로젝트입니다.\\n\n    `,\n    github: \"https://github.com/Godsenal/classChat\"\n  },\n  {\n    title: \"Owesome Gwent\",\n    description: `\n    Gwent 게임의 카드데이터를 보여주고, 덱을 짜볼 수 있는 사이트입니다.\\n\n    typescript로 작성되었으며, Nodejs와 React를 이용하였습니다.\\n\n    `,\n    website: \"http://owesomegwent.me\",\n    github: \"https://github.com/OwesomeGwent/owesome-gwent\"\n  },\n  {\n    title: \"fontest\",\n    description: `\n    웹에서 폰트를 테스트 해볼 수 있는 사이트입니다.\\n\n    폰트 url이나 stylesheet에 들어있는 폰트를 파싱해서 적용시키거나,\\n\n    로컬로 올린 폰트를 적용시킨 후 테스트 할 수 있도록 하는 프로젝트입니다.\\n\n    `,\n    website: \"http://fontest.me\",\n    github: \"https://github.com/Godsenal/fontest\"\n  },\n  {\n    title: \"renoti\",\n    description: `\n    React에서 사용할 수 있는 notification 라이브러리입니다.\\n\n    Notification 라이브러리가 필요한 경우가 많아서 시작해본 프로젝트 입니다.\\n\n    typescript로 작성되었으며 간단한 애니메이션과 여러 타입의 알림을 지원합니다.\\n\n    `,\n    website: \"https://godsenal.github.io/renoti\",\n    github: \"https://github.com/Godsenal/renoti\",\n    demo: <Renoti />\n  },\n  {\n    title: \"recalendar\",\n    description: `\n    React에서 사용할 수 있는 date-picker 입니다.\\n\n    date picker, date range picker를 제공하고 style 커스터마이징과 포탈같은 기능을 추가로 제공합니다.\\n\n    `,\n    website: \"https://godsenal.github.io/recalendar\",\n    github: \"https://github.com/Godsenal/recalendar\",\n    demo: <Recalendar />\n  }\n];\n\nexport default projects;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"../components\";\nimport projects from \"../projects\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\nconst CardList = () => {\n  const [main, sub] = useMemo(() => {\n    const withDemo = [];\n    const withoutDemo = [];\n    projects.forEach(project =>\n      project.demo ? withDemo.push(project) : withoutDemo.push(project)\n    );\n    return [withDemo, withoutDemo];\n  }, []);\n  return (\n    <Container>\n      {main.map(project => (\n        <Card key={project.title} {...project} width={\"100%\"} />\n      ))}\n      {sub.map(project => (\n        <Card key={project.title} {...project} />\n      ))}\n    </Container>\n  );\n};\n\nexport default CardList;\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useEventListener } from \"../hooks/event\";\r\nimport { HEADER_HEIGHT } from \"../constants/style\";\r\n\r\nconst Container = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: ${HEADER_HEIGHT}px;\r\n  padding: 1rem;\r\n  color: ${props => props.theme.white};\r\n  background-color: ${props => props.theme.background};\r\n  ${props =>\r\n    !props.fullHeader &&\r\n    `\r\n      padding: 0.1rem;\r\n      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n    `}\r\n\r\n  position: fixed;\r\n  transition: padding 0.1s ease-in-out, box-shadow 0.1s ease-in-out;\r\n  z-index: 2;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  flex: 0 1 200px;\r\n  padding-left: 2rem;\r\n`;\r\nconst Logo = styled.h1`\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 20px;\r\n`;\r\nconst Right = styled.div`\r\n  flex: 1 1;\r\n  padding-right: 2rem;\r\n`;\r\nconst Title = styled.div`\r\n  text-align: right;\r\n`;\r\nconst Header = () => {\r\n  const [fullHeader, setFullHeader] = useState(true);\r\n  useEffect(() => {\r\n    setFullHeader(window.pageYOffset < HEADER_HEIGHT);\r\n  }, []);\r\n  useEventListener(\"scroll\", () => {\r\n    if (window.pageYOffset > HEADER_HEIGHT) {\r\n      setFullHeader(false);\r\n    } else {\r\n      setFullHeader(true);\r\n    }\r\n  });\r\n  return (\r\n    <Container fullHeader={fullHeader}>\r\n      <Left>\r\n        <Logo>Lee Taehee</Logo>\r\n      </Left>\r\n      <Right>\r\n        <Title>Prography Portfolio</Title>\r\n      </Right>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const HEADER_HEIGHT = 60;\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (name, listener) => {\r\n  useEffect(() => {\r\n    window.addEventListener(name, listener);\r\n    return () => window.removeEventListener(name, listener);\r\n  }, []);\r\n};\r\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Body, CardList, Header } from \"./containers\";\n\nconst theme = {\n  primary: \"#1c6cec\",\n  secondary: \"#fb7da7\",\n  white: \"#fefefe\",\n  gray: \"#eee\",\n  background: \"#26262b\"\n};\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <Header />\n        <Body\n          header={`\n          Prography-Front 포트폴리오\n          `}\n          subHeader=\"Projects\"\n        >\n          <CardList />\n        </Body>\n      </>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}